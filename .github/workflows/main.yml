name: Free RDP via Tailscale

on:
  workflow_dispatch:

jobs:
  setup-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Enable RDP and Add Firewall Rule
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Create RDP user
        run: |
          $password = "Test!1234"  # You can randomize this if you want
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "rdpuser" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "rdpuser"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "rdpuser"
          echo "::add-mask::$password"
          echo "RDP_USER=rdpuser" >> $env:GITHUB_ENV
          echo "RDP_PASS=$password" >> $env:GITHUB_ENV

      - name: Install Tailscale
        run: |
          $url = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installer = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $url -OutFile $installer
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installer`"", "/quiet", "/norestart" -Wait
          Remove-Item $installer

      - name: Connect to Tailscale
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey "${{ secrets.TAILSCALE_AUTH_KEY }}" --hostname github-rdp-${{ github.run_id }}
          Start-Sleep -Seconds 10
          $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
          echo "Tailscale IP: $tsIP"

      - name: Keep VM Alive
        run: |
          Write-Host "`n========================"
          Write-Host "   Free GitHub RDP Info"
          Write-Host "========================"
          Write-Host "IP: $env:TAILSCALE_IP"
          Write-Host "User: $env:RDP_USER"
          Write-Host "Pass: $env:RDP_PASS"
          Write-Host "========================`n"

          while ($true) {
            Write-Host "[$(Get-Date)] RDP still active..."
            Start-Sleep -Seconds 300
          }

